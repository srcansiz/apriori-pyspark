name: Tag push test 

on:
  push:
    tags:
      - 'v*.*.*'  # Triggers on tags like v1.2.3

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
    
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          # list of Docker images to use as base name for tags
          images: |
            name/app
            ghcr.io/username/app
          # generate Docker tags based on the following events/attributes
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha

      - name: Extract Version from Git
        id: version
        run: |
          VERSION_TAG="${GITHUB_REF#refs/tags/}"     # e.g. v1.2.4rc1
          VERSION=${VERSION_TAG#v}                   # e.g. 1.2.4rc1

          # Detect pre-release suffix (rc, beta, alpha, etc.)
          if [[ "$VERSION" =~ (rc|alpha|beta) ]]; then
            echo "Pre-release detected: $VERSION"
            echo "VERSION=$VERSION" >> "$GITHUB_OUTPUT"
          else
            # Standard version format
            VERSION_MAJOR=$(echo "$VERSION" | cut -d. -f1)
            VERSION_MINOR=$(echo "$VERSION" | cut -d. -f1,2)

            echo "VERSION=$VERSION" >> "$GITHUB_OUTPUT"
            echo "VERSION_MINOR=$VERSION_MINOR" >> "$GITHUB_OUTPUT"
            echo "VERSION_MAJOR=$VERSION_MAJOR" >> "$GITHUB_OUTPUT"
          fi


      - name: Print
        run: | 
          echo "${{ steps.version.outputs.VERSION }}"
          echo "${{ steps.version.outputs.VERSION_MINOR }}"
          echo "${{ steps.version.outputs.VERSION_MAJOR }}"
          echo "${{ steps.meta.outputs.tags }}"

          
